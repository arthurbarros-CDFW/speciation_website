"0","sonar_sampling <- function(daily_sonar, aux_data) {"
"0","  weeks <- unique(daily_sonar$Week)"
"0","  "
"0","  #estimate weekly proportions of auxiliary species counts"
"0","  aux_proportions <- aux_data %>%"
"0","    group_by(Week) %>%"
"0","    mutate(total_n = sum(Total_Count),"
"0","         proportion = Total_Count / total_n) %>%"
"0","    ungroup()"
"0","  "
"0","  # Predefine data frame for results"
"0","  weekly_sonar <- vector(""list"", length(weeks))"
"0","  "
"0","  # Get boundary weeks for aux_proportions"
"0","  first_aux_week <- min(aux_proportions$Week)"
"0","  last_aux_week <- max(aux_proportions$Week)"
"0","  "
"0","  for (i in seq_along(weeks)) {"
"0","    week <- weeks[i]"
"0","    "
"0","    # Get auxiliary data for the current week"
"0","    wk_sp <- aux_proportions %>% filter(Week == week)"
"0","    wk_sonar <- daily_sonar %>% filter(Week == week)"
"0","    "
"0","    # Create species vector or default to ""A"" or ""B"" based "
"0","    #on week range this is for weeks of sonar data"
"0","    #that don't match up with weeks of aux data"
"0","    sp_vec <- if (nrow(wk_sp) > 0) {"
"0","      rep(wk_sp$aux_species, wk_sp$Total_Count)"
"0","    } else if (week < first_aux_week) {"
"0","      ""A"""
"0","    } else if (week > last_aux_week) {"
"0","      ""B"""
"0","    } else {"
"0","      character(0)"
"0","    }"
"0","    "
"0","    # Perform sampling and count occurrences of each species"
"0","    if (length(sp_vec) > 0) {"
"0","      samp_sonar <- sample(sp_vec, sum(wk_sonar$Net_Movement),"
"0","                           replace = TRUE)"
"0","      samp_A <- sum(samp_sonar == ""A"")"
"0","      samp_B <- sum(samp_sonar == ""B"")"
"0","    } else {"
"0","      samp_A <- 0"
"0","      samp_B <- 0"
"0","    }"
"0","    "
"0","    # Store results in a list to avoid repeated data frame binding"
"0","    weekly_sonar[[i]] <- data.frame(Week = week, A = samp_A, B = samp_B)"
"0","  }"
"0","  "
"0","  # Bind the list into a single data frame after the loop"
"0","  weekly_sonar <- do.call(rbind, weekly_sonar)"
"0","  return(weekly_sonar)"
"0","}"
