"0","set.seed(Sys.time()) #reset seed"
"0","iterations=100"
"0","results<-data.frame()"
"0","for(i in 1:iterations){"
"0","  train_index <- createDataPartition(aux_index$species,"
"0","                                     p = 0.7, list = FALSE) "
"0","  train_data <- aux_index[train_index, ]"
"0","  test_data <- aux_index[-train_index, ]"
"0","  model_iter <- glm(species_index ~ as.numeric(date) + length,"
"0","               data = train_data, family = binomial)"
"0","  predictions <- predict(model_iter, "
"0","                         newdata = test_data, type = ""response"")"
"0","  predicted_classes <- ifelse(predictions > 0.5, 1, 0)"
"0","  species_predicted<-ifelse(predicted_classes==1,""A"",""B"")"
"0",""
"0","  test_data<-test_data%>%"
"0","    cbind(species_predicted<-ifelse(predicted_classes==1,""A"",""B""))"
"0","  accuracy <- sum(species_predicted == test_data$species)/nrow(test_data)"
"0","  "
"0","  Ntrue_A<-sum(test_data$species==""A"")"
"0","  Ntrue_B<-sum(test_data$species==""B"")"
"0",""
"0","  Nest_A<-sum(test_data$species_predicted==""A"")"
"0","  Nest_B<-sum(test_data$species_predicted==""B"")"
"0",""
"0","  error_A <- abs(Nest_A - Ntrue_A)"
"0","  error_B <- abs(Nest_B - Ntrue_B)"
"0",""
"0","  rel_error_A <- error_A / Ntrue_A"
"0","  rel_error_B <- error_B / Ntrue_B"
"0","  "
"0","  MAPE <- mean(c(rel_error_A, rel_error_B)) * 100"
"0","  "
"0","  d<-data.frame(""accuracy""=accuracy,""MAPE""=MAPE)"
"0","  results<-results%>%rbind(d)"
"0","}"
