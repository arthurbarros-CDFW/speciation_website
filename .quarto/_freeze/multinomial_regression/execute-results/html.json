{
  "hash": "1a58afefe59f65b3009416d62c896710",
  "result": {
    "markdown": "---\ntitle: \"Multinomial Regression\"\n\nbibliography: references/references.bib\nlink-citations: TRUE\n---\n\n::: {.cell}\n\n:::\n\n\n# Logistic regression for multiple species\n\nWe can expand our speciation model to incorporate more than two species\nusing a \"multinomial logistic regression\". We can estimate the\nprobability that a given sonar fish image $y$ is species $k$ using the\nequation:\n\n$$\nP(y=k)=\\frac{e^{\\beta_{0,k}+\\beta_{1,k}*x_{1,y}+\\beta_{2,k}*x_{2,y}+...+\\beta_{M,k}*x_{M,y}}}{1+\\sum^{K-1}_{j=1}{e^{\\beta_{0,k}+\\beta_{1,k}*x_{1,y}+\\beta_{2,k}*x_{2,y}+...+\\beta_{M,k}*x_{M,y}}}}\n$$ {#eq-multinomial_regression}\n\nWhere $K$ is the total number of different species $k$ and $M$ is the\ntotal number of explanatory variables. Similar to our binomial regression, the\nabove relies on regression coefficients associated with each explanatory\nvariable and the $k$th outcome. Again with our example will utilize\nexplanatory variables of date of observation, fish length (cm), water\nflow (cfs). We'll generate a new set of auxiliary data, this time for\nthree species. This simulated auxiliary data is for three species \"A\",\n\"B\", and \"C\", which have some amount of overlap in their run timing and\nsizes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#create new simulated auxiliary length and date for species C.\n\n#lengths\nlengths_C <- rnorm(150, mean=110, sd=10)\n\n#dates\ndates_C <- round(rnorm(150,mean = as.numeric(as.Date(\"2024-03-15\")), sd = 20))\n\n#make dataframe\naux_dataC <- data.frame(\n  length = c(lengths_C),\n  date = round(as.Date(dates_C,origin = \"1970-01-01\")),\n  species = factor(rep(\"C\", times=150))\n)\n\n#join in flow we created in last section\naux_dataC<-aux_dataC%>%\n  dplyr::left_join(flow_df,by=\"date\")\n\naux_data<-aux_data%>%\n  rbind(aux_dataC)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Plots showing date, length, and flow for expanded simulated auxiliary data with multiple species.](multinomial_regression_files/figure-html/m_regression_aux_plot-1.png){width=480}\n:::\n:::\n\n\nRecall that the `sonar_data` we've been utilizing thus far is only for\ntwo species, so next we'll add some data for a third species \"C\" into\nour set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Simulate some example sonar data\n#lengths\nlengths_C <- rnorm(300, mean=110, sd=10)\n\n#dates\ndates_C <- round(rnorm(300,mean = as.numeric(as.Date(\"2024-03-15\")), sd = 20))\n\n#make dataframe\nsonar_dataC <- data.frame(\n  length = c(lengths_C),\n  date = round(as.Date(dates_C,origin = \"1970-01-01\"))\n)\n\n#join in flow we created in last section\nsonar_dataC<-sonar_dataC%>%\n  dplyr::left_join(flow_df,by=\"date\")\n\nsonar_data<-sonar_data%>%\n  rbind(sonar_dataC)\n```\n:::\n\n\nTo predict species we can use a method similar to our binomial logistic\nregression but this time using the `multinom()` call from the `nnet`\npackage to run a multinomial regression model. Again will begin by\niteratively training and testing the model on our auxiliary data set to\nestimate the models accuracy.\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nsuppressMessages(library(nnet))\n# Split data into training and testing sets\nset.seed(Sys.time()) #reset seed\niterations=100\nresults<-data.frame()\nfor(i in 1:iterations){\n  train_index <- createDataPartition(aux_data$species, p = 0.7, list = FALSE) \n  train_data <- aux_data[train_index, ]\n  test_data <- aux_data[-train_index, ]\n  \n  #use multinom() call for multinomial regression\n  model_iter <- multinom(species ~ as.numeric(date) + length + Flow_cfs,\n                    data = train_data)\n  test_data$species_predicted <- predict(model_iter, newdata = test_data)\n  accuracy <- sum(test_data$species_predicted == \n                    test_data$species)/nrow(test_data)\n  \n  Ntrue_A<-sum(test_data$species==\"A\")\n  Ntrue_B<-sum(test_data$species==\"B\")\n  Ntrue_C<-sum(test_data$species==\"C\")\n  \n  Nest_A<-sum(test_data$species_predicted==\"A\")\n  Nest_B<-sum(test_data$species_predicted==\"B\")\n  Nest_C<-sum(test_data$species_predicted==\"C\")\n\n  error_A <- abs(Nest_A - Ntrue_A)\n  error_B <- abs(Nest_B - Ntrue_B)\n  error_C <- abs(Nest_C - Ntrue_C)\n\n  rel_error_A <- error_A / Ntrue_A\n  rel_error_B <- error_B / Ntrue_B\n  rel_error_C <- error_C / Ntrue_C\n  \n  MAPE <- mean(c(rel_error_A, rel_error_B, rel_error_C)) * 100\n  \n  d<-data.frame(\"accuracy\"=accuracy,\"MAPE\"=MAPE)\n  results<-results%>%rbind(d)\n}\n```\n:::\n\n\nBased on the above model training and iterative testing, we see our\nmodel predicted the species of our test data with an average accuracy of\nNA .\n\nNext we'll retrain our model using the entire auxiliary data set, and\nthen use it to predict species of `sonar_data2`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_2<-multinom(species ~ as.numeric(date) + length + Flow_cfs,\n                  data = aux_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# weights:  15 (8 variable)\ninitial  value 961.285753 \niter  10 value 351.219577\niter  20 value 298.056623\niter  30 value 294.213467\niter  40 value 221.623902\niter  50 value 215.123009\niter  60 value 195.043939\niter  70 value 193.355963\niter  80 value 192.095513\niter  90 value 187.450502\niter 100 value 184.900676\nfinal  value 184.900676 \nstopped after 100 iterations\n```\n:::\n\n```{.r .cell-code}\nsonar_data$species <- predict(model_2, newdata = sonar_data, type = \"class\")\n```\n:::\n\n\nWe can visualize our speciation results below, and see how they track\nwith date and length.\n\n\n::: {.cell warnings='false' messages='false'}\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![Plot showing species assignments of sonar data using multinomial logistic regression.](multinomial_regression_files/figure-html/model2_plot-1.png){width=480}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nN_est4<-sonar_data%>%\n  group_by(species)%>%\n  tally()\n```\n:::\n\n\nOur final estimates of abundance in this example are 1039for\nspecies A, 785 for species B, and 326 for\nspecies C.\n\n## *Estimating uncertainty*\n\nNothing fancy here, we can replicate our bootstrapping methods we used\nduring for the logistic regression model just this time with our\nmultinomial model.\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\n#bootstrapping boogie\niterations<-100\nresults<-data.frame()\n\nfor(j in 1:iterations){\n  d <- sonar_data[sample(nrow(sonar_data), replace = TRUE), ]\n  p_classes <- predict(model_2, newdata = d, type = \"class\")\n\n  sonar_boot<-d%>%cbind(p_classes)\n  \n  N_A<-length(which(sonar_boot$p_classes==\"A\"))\n  N_B<-length(which(sonar_boot$p_classes==\"B\"))\n  N_C<-length(which(sonar_boot$p_classes==\"C\"))\n  iter<-data.frame('iteration'=j,\"A\"=N_A[1],\"B\"=N_B[1],\"C\"=N_C[1])\n  results<-results%>%rbind(iter)\n}\n\n#iteration total estimates\niter_totals<-results%>%\n  group_by(iteration)%>%\n  dplyr::summarise(A=sum(A),\n                   B=sum(B),\n                   C=sum(C))\n\n#bounds\nA_stats <- quantile(iter_totals$A, probs = c(0.025, 0.975))\nB_stats <- quantile(iter_totals$B, probs = c(0.025, 0.975))\nC_stats <- quantile(iter_totals$C, probs = c(0.025, 0.975))\n```\n:::\n\n\nThe above results show that our estimate of total abundance of species A\nin our sonar counts is 1039 with 95% CI\n\\[989, 1084\\], a count of\n785 with 95% CI \\[730,\n828\\] for species B, and a count of 326\nwith 95% CI \\[294, 353\\] for\nspecies C.\n\n\n::: {.cell}\n\n:::",
    "supporting": [
      "multinomial_regression_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}